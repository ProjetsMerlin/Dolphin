Une fois dans le dossier à l'aide de cd ...
-------------------------------------------

git init -> initie le dossier en cours au versionning
git log -> aperçu du versionning
git status -> statut du versionning

git add test.php -> maj du fichier dans le versionning
git add . -> maj de tout le dossier dans le versionning
git commit -m "commentaire" -> maj du versionning si fichier modifié avec commentaire
git commit -a -m "commentaire" -> Raccourci pour faire la maj du versionning de tous les fichiers du dossier

git checkout SHADuCommit -> revenir à cette version
git checkout master -> revenir à la branche principale
git revert SHADuCommit -> annulé cette versiont git
git revert --hard -> tout annulé

git clone https://github.com/GitHM/POO-PHP-tutorial -> cloner un projet sur sa machine
git push origin master -> mettre son projet sur github
git pull origin master -> mettre à jour son projet local depuis github

git branch -> affiche la branche courrante
git branch ma-branchee -> ajout d'une nouvelle branche
git checkout ma-branche -> se placer dans une branche
git checkout -b ma-branche -> raccourci des 2 commandes précédentes : on créé et on s'y place
git branch -d ma-branche -> supprime la branche
git merge brancheB -> met à jour la branche actuelle vers la branche détaillée

git blame nomdufichier.extension -> voir le détails des modifications des fichiers - retourne un code par ligne
git show coderetourné -> détaille de la modification

.gitignore -> nom du fichier qui liste les chemins des fichiers qu'il ne faut pas publiés !!

git stash -> arreter le travail en cours et passer sur d'autres branches
git stash pop -> reprendre le travail quin'est pas terminé
git stash apply -> la commande stash pop delete stash. Pour la garder, ajouter apply
git push origin --delete [nom_de_la_branche] -> supprime une branche sur Github

principale :

git commit -a -m "commentaires" -> met à jour tout le travail